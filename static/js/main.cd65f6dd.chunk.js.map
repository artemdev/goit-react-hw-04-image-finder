{"version":3,"sources":["components/searchbar.js","components/galleryItem.js","api/getImages.js","components/imagegallery.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","handleQuery","className","onSubmit","type","autoComplete","autoFocus","placeholder","id","GalleryItem","image","onClick","openModal","src","webformatURL","alt","closeModalWithEscape","e","key","modalInstance","close","closeModal","basicLightbox","largeImageURL","closable","onShow","document","addEventListener","setTimeout","querySelector","onClose","removeEventListener","show","axios","defaults","baseURL","params","image_type","orientation","per_page","getImages","q","a","page","get","data","hits","console","log","error","ImageGallery","query","useState","images","setImages","isLoading","setIsLoading","setPage","useEffect","then","length","finally","color","height","width","timeout","map","shortid","generate","preventDefault","prevPage","newImages","window","scrollTo","top","documentElement","scrollHeight","behavior","catch","App","setQuery","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd65f6dd.chunk.js","sourcesContent":["export default function Searchbar({ handleQuery }) {\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleQuery}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          id=\"q\"\n        />\n      </form>\n    </header>\n  );\n}\n","import * as basicLightbox from 'basiclightbox';\n\nexport default function GalleryItem({ image }) {\n  return (\n    <img\n      onClick={() => openModal(image)}\n      src={image.webformatURL}\n      alt=\"\"\n      className=\"ImageGalleryItem-image\"\n    />\n  );\n}\n\nconst openModal = image => {\n  const closeModalWithEscape = e => {\n    if (e.key === 'Escape') modalInstance.close();\n  };\n  const closeModal = () => {\n    modalInstance.close();\n  };\n\n  let modalInstance = basicLightbox.create(\n    `\n        <div class=\"Overlay\">\n          <div class=\"Modal\">\n              <img src=${image.largeImageURL} alt=\"\" />\n          </div>\n      </div>\n      `,\n    {\n      closable: true,\n      onShow: () => {\n        //add listeners\n        document.addEventListener('keydown', closeModalWithEscape);\n        setTimeout(() => {\n          document\n            .querySelector('.Overlay')\n            .addEventListener('click', closeModal);\n        }, 500);\n      },\n      onClose: () => {\n        document.removeEventListener('keydown', closeModalWithEscape);\n        document\n          .querySelector('.Overlay')\n          .removeEventListener('click', closeModal);\n      },\n    },\n  );\n  modalInstance.show();\n};\n","import axios from 'axios';\nconst API_KEY = '19741747-aaef32235b2696c68d5824b79';\nconst BASE_URL = 'https://pixabay.com/api';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: 12,\n};\nconst getImages = async (q, page = 1) => {\n  try {\n    const { data } = await axios.get('/', { params: { q, page } });\n    return data.hits;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport default getImages;\n","import { useEffect, useState } from 'react';\nimport GalleryItem from './galleryItem';\nimport Loader from 'react-loader-spinner';\nimport shortid from 'shortid';\nimport getImages from '../api/getImages';\n\nexport default function ImageGallery({ query }) {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (query) {\n      setIsLoading(true);\n      getImages(query)\n        .then(images => !!images.length && setImages(images))\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [query]);\n\n  const loadMore = e => {\n    e.preventDefault();\n    setPage(prevPage => prevPage + 1);\n    setIsLoading(true);\n    getImages(query, page + 1)\n      .then(newImages => {\n        setImages([...images, ...newImages]);\n        setIsLoading(false);\n      })\n      .then(() =>\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        }),\n      )\n      .catch(console.log);\n  };\n\n  return (\n    <section>\n      {isLoading ? (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      ) : images.length ? (\n        <section>\n          <ul className=\"ImageGallery\">\n            {images.map(image => (\n              <li key={shortid.generate()} className=\"ImageGalleryItem\">\n                <GalleryItem image={image} />\n              </li>\n            ))}\n          </ul>\n          <button className=\"Button\" type=\"submit\" onClick={loadMore}>\n            Load more\n          </button>\n        </section>\n      ) : (\n        <h3>Please, enter the name of the image to find</h3>\n      )}\n    </section>\n  );\n}\n","import './App.css';\nimport Searchbar from './components/searchbar';\nimport ImageGallery from './components/imagegallery';\nimport { useState } from 'react';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n\n  const handleQuery = e => {\n    e.preventDefault();\n    setQuery(e.target.q.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar handleQuery={handleQuery} />\n      <ImageGallery query={query} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}